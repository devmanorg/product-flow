# TODO Переработать риски в пользовательские истории:
# - A. Низкое качество проектирования → Недооценка объема работ и разработка бесполезных "фич" → срыв сроков реализации
# - B. Польза описана поверхностно → потенциально бесполезные истории → тратим силы на реализацию бесполезных фич
# - C. Потеряли целую роль и все её истории → срыв сроков разработки, доп. затраты на переделку продукта
# - D. Потеряли одну, но очень трудоёмкую job story → срыв сроков разработки, доп. затраты на переделку продукта
# - E. Малоценные истории. Пользователи переживут и без них, воспользуются обходным манёвром → тратим силы на реализацию бесполезных фич
# - F. Переусложнённое задание → Трудно читать → документ заброшен → срыв сроков реализации

# TODO Переработать в пользовательские истории способы самостоятельно проверить качество задачния
  # - Заполнены обязательные поля
  # - В историях перечислены не люди, а их роли. Ролей обычно больше, чем людей.

  # - Не потеряны ключевые истории:  # Нужны не все возможные истории, а только ключевые
  # - Нет историй/функций без привязки к границам продукта
  # - Если одна роль сообщает что-то другой, то есть и зеркальная история, где вторая роль реагирует на сообщение

# TODO Оставить комментарии в yaml-задании `# TODO` и `# FIXME` + Затем их заметить
# TODO Хранить задание в текстовом виде в репозитории рядом с кодом (версионировать, править из привычного редактора)

# TODO Нужен раздел в документации "С чего начать" ?


# TODO Польза от Product Flow Assignment для исполнителя (ПМ, Разработчик) или Заказчика:
  # - Загрузить суть проекта в голову: 
  #   - Скинуть описание пользы продукта другому человеку
  #   - Прочитать о пользе продукта за несколько минут
  # Повысить качество продукта на этапе проектирования:
  #   - Отказаться от малоценных историй
  #   - Согласовать с Заказчиком образ продукта
  #   - Зафиксировать полезные фичи продукта
  #   - Получить список характеристик продукта для сравнения с аналогами
  #   - Зафиксировать будущий образ продукта для учета при выборе технических решений 


# TODO Распарсить yaml-задание
  # Было бы здорово спарсить yaml-задания, чтобы посмотреть статистику, отрисовать схему, упростить навигацию и проверить
  # валидность файла.


# TODO разобрать пользовательские истории в старом формате:
# Заказчик:
#   B1.  (P2b) Веду переговоры с Исполнителем & Возникла тревога, что результат не будет соответствовать моим целям --> Хочу снизить риск, что результат не понравится --> Подтвердил Исполнителю, что список `profits` соответствует моим ожиданиям
#   B2.  (P2e) Веду переговоры с Исполнителем & Описал, как продукт будет развиваться в будущем & Возникла тревога, что текущие решения сделают развитие дорогостоящим --> Хочу зафиксировать отложенную пользу продукта --> Вижу записанную в задании пользу, она отмечена как отложенная
#   B3.  (P1a, P1b) Нанимаю менеджера для разработки продукта & Начался созвон --> Хочу передать зачем нужен продукт --> Менеджер подтвердил, что прочитал раздел `profits`
# Продукт менеджер:
#   A1.  (P2b) Веду переговоры с Заказчиком & Возникла тревога, что результат не понравится Заказчику--> Хочу снизить риск, что результат не понравится Заказчику --> Заказчик утвердил раздел `profits`
#   A2.  (P2e) Веду переговоры с Заказчиком & Заказчик сообщил, что хотел бы добавить в следующей версии продукта --> Хочу зафиксировать отложенную пользу продукта --> Вижу записанную в задании пользу, она отмечена как отложенная
#   A3.  (P2a) Веду переговоры с Заказчиком & Заказчик просит другие варианты дешевле/быстрее & Задумался от чего можно отказаться --> Хочу оценить стоимость блоков работ --> Вижу количество 'job stories' для каждого элемента `profits`
#   A4.  (P1a, P1b) Нанял команду для разработки & Назначил созвон --> Хочу объяснить зачем нужен продукт --> Скинул ссылку на раздел `profits` задания на продукт
#   A5.  (P2a) Заказчик просит новую фичу & Возникла тревога, что это увеличивает бюджет --> Хочу убедить Заказчика отказаться от нее --> Заказчик согласился, что фича расходится с `profits`, обсуждаем добавление новой пользы или отказ от фичи
#   A7.  (P2c) Записал историю --> Хочу убедиться, что она ценная --> Проставил индекс соответствующей пользы
#   A8.  (P2c) Написал `job stories` & Возникла тревога, что что-то важное забыл --> Хочу проверить, что ключевые `job stories` записаны  --> Вижу, что для каждой пользы из `profits` есть хотя бы одна `job story`
#   A9.  (P2a) Заметил, что `job stories` много & Возникла тревога, что не уложимся в сроки/бюджет --> Хочу избавиться от пачки историй --> Выкинул пачку `job stories`, отложив одну из польз
#   A10.  (P2d) Приступил к проектированию продукта & Заметил, что у продукта есть близкие аналоги --> Хочу сравнить по списку характеристик --> Скопировал список польз из `profits` для сравнения
#   A11.  (P2с) Сопоставляю `job stories` с `profits` & Наткнулся на ценную `job story`, которая не относиться ни к одной из польз --> Хочу добавить в продукт новую ключевую пользу --> Вижу новую пользу в `profits`
#   A13.  (P2d, P1a) Маркетолог просит описать пользу проекта для проведения исследования по JTBD --> Хочу скинуть список Job Statements --> Скинул ссылку на раздел `profits` задания
#   A14.  (P2c) Разработчик настаивает на дроблении `job story` --> Хочу аргументировать отказ --> Вижу, что фича соответствует `profits` и усилит продукт, оцениваю стоимость добавления
#   A15.  (P2a) Разработчик настаивает на дроблении `job story` --> Хочу аргументировать отказ --> Разработчику согласился, что история не соответствует `profits`
# Разработчик:
#   С1. (P1b) Получил список задач & Заметил, что задача сложная, не хочется делать --> Хочу понять, зачем она нужна --> Вижу, что какую пользу приносит фича, хочу сделать ее
#   С2. (P1a, P1b) Устроился на проект разработчиком & Скинули задание --> Хочу разобраться зачем нужен продукт --> Прочитал `profits`, в голове сложилась картинка для кого и зачем делаю продукт
#   С4. (P1b) Попросили поправить багу в старом проекте --> Хочу вспомнить что за продукт --> Вспомнил ключевые особенности проекта
#   С5. (P2e) Проектирую БД, сравниваю варианты реализации & Заметил, что один из вариантов крайне ограничивает возможные сценарии использования & Тревожусь, что в следующей версии продукта придется переделывать --> Хочу свериться с возможными сценариями использования продукта в будущем --> Вижу описание, в каком направлении планируется развивать проект 
#   С7. (P2c) В голову пришла классная фича --> Хочу убедиться, что она усилит продукт --> Отправил Менеджеру проекта, сославшись на соответствующую пользу в `profits` 
#   C8. (P2a) В голову пришла классная фича --> Хочу убедиться, что она усилит продукт --> Отказался от фичи, не найдя в profits соответствующей пользы


# TODO Добавить отсылки к competitors:
# competitors: # 🥊 Другие способы решить заявленные проблемы
#   - ERP-системы
#   - Task trackers:_ Asana, Jira, Trello, etc
#   - Переписка в чатиках личных и групповых
#   - Еженедельные планёрки
#   - Уроки и шаги на Девмане
#   - Скриншот похожего продукта
#   - Живое обсуждение внутри команды
#   - Краткое описание продукта в свободной форме
#   - Покрыть документацией отдельные части в остальном стандартного продукта
#   - Функциональные и нефункциональные требования в ТЗ по ГОСТ
#   - [Приёмочные тесты "Acceptance testing"](https://en.wikipedia.org/wiki/Acceptance_testing)
#   - [Нотация сценариев использования UML](https://ru.wikipedia.org/wiki/%D0%A1%D1%86%D0%B5%D0%BD%D0%B0%D1%80%D0%B8%D0%B9_%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F#%D0%9D%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F_%D1%81%D1%86%D0%B5%D0%BD%D0%B0%D1%80%D0%B8%D0%B5%D0%B2_%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)
#   - Для заметок использовать Workflowy или браузерный плагин


# TODO Добавить отсылки на referencies -- Примеры похожих продуктов
#   - Поток создания ценности -- это и есть поток создания продуктов и их развития.
#   - [Метод Jobs To Be Done](https://tilda.education/articles-jobs-to-be-done)

# TODO Вся инфа в заданиях представлена в виде списков
# - Ради молниеносного многократного сканирования и чтения
# - Для быстрой итеративной доработки в процессе развития продукта

# TODO Задания составляет в формате yaml-заданий, чтобы зафиксировать структуру документа и
# использовать code folding в текстовых редакторах


# TODO разобрать пользовательские истории в старом формате:
# - Solo worker:
#   - ☐ В ходе тестирования подорвался на сложной проблеме → Хочу отвлечься, но зафиксировать на чём остановился → В плане работ вижу галочки напротив того, что успел проверить
#   - ☐ Пришла в голову новая идея → Хочу решить взять в работу или отказаться → Принял решение
#     - ☐ Не могу сходу принять решение → Хочу узнать что потеряю, отказавшись от изменения → Молниеносно сверился c пользой, органичениями и историями
#   - ☐ Решил нарастить продукт → Хочу внести правки, ничего не поломав → Вижу, что изменения в задании не противоречат старым записям
#     # Получается, что на любой продукт должно быть задание и оно неизбежно поддерживается всё время эксплуатации ?
#     - ☐ Боюсь, что забыл важные детали → Хочу быстро вспомнить о специфике продукта перед внесением изменений → Молниеносно перечитал задание
#     - ☐ Боюсь поломать что-то важное → Хочу узнать какие важные истории могли быть задеты → Молниеносно сверился со списком уже реализованных историй.
#   - ☐ Нашёл что-то странное в тексте задания → Хочу записать куда-то, чтобы отложить обдумывание и не потерять → …
# - Владелец:
#   # TODO
#     # В YAML-файле много разделов и заполнить их все с полпинка не выйдет. Продумать каким должен быть
#     # результат -- это мозгоёмкая задача и лучше поручать её исполнителю. В таком случае заказчик может отдать в работу
#     # полупустой документ лишь с набросками задания и единственным обязательным к заполнению разделом будет "profit".
#     # Без "пользы" любое задание теряет смысл.
#   - ☐ Появилась крупная задача без деталей реализации → Хочу, чтобы мейнтейнер сам всё додумал и согласовал со мной → Требую отчитаться в виде нового задания
#     - ☐ Мейнтейнер прислал промежуточный отчёт → Хочу не продолбать исходные хотелки → Убедился, что отчёт расширяет моё исходное задания и в диффе ничего не потеряно
#     - ☐ Мейнтейнер сообщил что закончил → Хочу готовый к использованию продукт, а не полуфабрикат → Убедился, что чеклисты не пусты и везде проставлены галочки
#   - ☐ Разработка выглядит большой и рискованный → Хочу отслеживать прогресс → Вижу по каким Roadmap/Milestones буду отслеживать
#     - ☐ … → Хочу знать сколько планируется этапов и какие ожидать сроки поставки → …
#     - ☐ … → Хочу узнать когда ждать реализована  фича → Нашёл в какой этап вошла фича и когда её ждать
#   - ☐ Начальство запросило отчёт по ходу работ → Хочу быстро скинуть инфу → Отправил ссылку с заданием и инфой по прогрессу
#     - ☐ Нашёл в старой переписке ссылку на исходное задание → Хочу добраться до roadmap и отчётов → Как (?)
#       # Возможно, мейнтейнер делая форк (EXTEND) должен нажать ещё куда-то, чтобы автор исходного документа видел его как "результат" или "отчёт" или "предложенные правки"
#     - ☐ Не смог найти ссылку на задание или отчёт → Хочу найти документ → Как (?)
#     - ☐ … → Хочу, чтобы начальство получило свежую инфу → Вижу дату последнего обновления от мейнтейнера
#     - ☐ … → Хочу, чтобы начальство увидело сроки поставки → …
#     - ☐ … → Хочу, чтобы начальство увидело какие фичи и в какой milestone вошли → …
#     - ☐ Боюсь, что начальство увидит только 404 из-за ненастроенного доступа → Хочу выдать доступ → Копирую ссылку для read-only доступа
#   - ☐ Всплыли новые факты → Хочу перегодовориться с мейнтейнером → …
#     - ☐ … → Хочу поменять задание → …
#   - ☐ Мейнтейнер просит забрать готовый продукт → Хочу организовать поддержку и развитие продукта → …
#     - ☐ … → Хочу обновить документацию по продукту → Вливаю правки от мейнтейнера
#     - ☐ Всплыли баги → Хочу заказать поддержку другому сотруднику → Сотрудник получил продуктовую документацию
#     - ☐ Появилась новая возможность → Хочу заказать доработку продукта у другого сотрудника → Сотрудник получил продуктовую документацию
#   - ☐ В дороге вспомнил про срочную/важную задачу → Хочу сформулировать задание устно → Мейнтейнер скинул мне ссылку на описание задачи
#     # Как в таком случае передать права на задание начальнику? Видимо, указав учётку начальника "Передать права".
#   - ☐ … → Хочу найти ссылку на старое задание → …
#     - ☐ Вспомнил, что недавно смотрел отчёт → Хочу сократить выдачу до "свежие updates" → Вижу выдачу от свежего к старому с учётом зависимых заданий
#     - ☐ Вспомнил, что задачу делал не сам → Хочу сократить выдачу до "делегировано" → …
#     - ☐ Вспомнил, что упоминалось в названии → … → …
#     - ☐ Вспомнил, что упоминалось в тексте → … → …
#     - ☐ Нашёл ссылку у себя в заметках → Хочу проверить, что это не устаревшая копия → Узнал, что отчёт составлял мейнтейнер и обновлял неделю назад
#   - ☐ Мейнтейнер написал, что не сможет доделать продукт → Хочу передать работу другому мейнтейнеру → …
#   - ☐ Мейнтейнер отписался, что готово → Хочу убедиться, что он всё продумал и протестировал → Вижу что заполнены все разделы документа и проставлены галочки
# - Мейнтейнер:
#   - ☐ Владелец просит составить Roadmap → Хочу показать что и в какой момент делаем → 
#   - ☐ Владелец просит update по ходу работ → Хочу показать что уже реализовано, и когда будет остальное → В отчёте лежит актуальная инфа и проставлена дата обновления
#     - ☐ … → Хочу показать что реализовано, а что ещё нет
#     - ☐ Переживаю, что опаздываю на неделю → Хочу сдвинуть срок поставки продукта → …
#     - ☐ Переживаю, что опаздываю на неделю → Хочу сдвинуть сроки всех milestones начиная с текущего → …
#     - ☐ Всплыли новые блоки работ → Хочу сдвинуть срок отдельного milestone и всех следующих → …
#   - ☐ Всплыли новые факты → Хочу, чтобы владелец поменял задание → …
#   - ☐ … → Хочу выдать read-only доступ к документации для членов команды → 
#   - ☐ В ходе тестирования всплыла бага → Хочу сообщить о проблеме программисту → Скопирал 
#   - ☐ Приступил к новой фиче → Хочу спланировать тестирование → Скопирал несколько job stories, включая вложенные к себе в личный список задач
#     # При таком тестировании теряется роль. Но можно починить эту проблему через хитрую логику копирования на стороне фронтенда: подставляет роль.
#   - ☐ … → Хочу сократить объём работ → … (как проверить, что новое задание меньше старого?)
#   - ☐ … → Хочу получить от владельца обратную связь до начала дорогой разработки → …
#   - ☐ … → Хочу узнать какие фичи уже реализованы, а какие нет → …
#   - ☐ Нашёл что-то странное в тексте задания → Хочу записать куда-то, чтобы отложить обдумывание и не потерять → …
#     - ☐ Боюсь, что заметку не поймёт владелец или члены команды → Хочу спрятать от них → Сайт сообщил, что заметки никому не видны кроме меня.
#   - ☐ В голову пришла гениальная идея → Хочу добавить boundary → Вижу, что оно бесполезно
#   - ☐ В голову пришла гениальная идея → Хочу добавить риск → Вижу, что ущерб ничтожен
#   - ☐ Заметил неподъёмную кучу продуктовых рисков → Хочу отказаться от рискованной функциональности → Вижу новые boundaries и что они исключают риски
#   - ☐ В таск-трекере пишу задание для исполнителя → Хочу сослаться на job stories, что прошу реализовать → Скопировал уникальный индекс job story
#   - ☐ Перечитываю старое забытое yaml-задание → Хочу сделать это быстро в один проход → Прочитал сверху вниз и не заметил нарушения причинно-следственных связей 
#   - ☐ Испугался, что забыл обработать продуктовый риск → Хочу узнать что запланировано в борьбе с этим риском → Вижу job stories, пункты Как проверить и Шаблона отчёт о поддержке продукта, что снижают вероятность и/или ущерб интересующего риска
#   - ☐ Заметил загадочный пункт в разделе Как проверить → Хочу вспомнить зачем это понадобилось → Вижу описание связанного продуктового риска
#     # - ☐ … → Хочу выбрать из-под какой организации создать задание
#     # Если все задания личные, то зачем вводить организации ?
#   # TODO. Хочу быстро не погружаясь в контекст записать идею, которую с ходу не могу упаковать в job stories, риски, пользу, etc., чтобы вспомнить на следующем сеансе перепроектирования.
#   # TODO Хочу из гугл-таблицы сослаться на job story в файле assignment.yaml так, чтобы он нумерация не сбилась при регулярных изменения в assignment.yaml
#   # TODO Добавляю job story в одну из ролей, где их уже накопилось 30 штук → Хочу быстро проверить, что нет похожих job stories →  TODO: нужна группировка, чтобы быстро отсеить неотносящиеся к делу job stories
#   # TODO У продукта сразу несколько интерфейсов: десктопный сайт, мобильный сайт, мобильное приложение Android, мобильное приложение iOS и т.д. Хочу вести отдельный учёт job stories, чтобы отслеживать прогресс независимо для каждой платформы
#   #    Скорее всего, в job stories надо группировать не только по роли, но и по платформе.
