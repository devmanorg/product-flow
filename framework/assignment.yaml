use: product

intro: |
  Фреймворк с помощью которого вы сможете быстро составлять задания на разработку продуктов или оказание услуг.
  Подходит для самостоятельного использования или внутри команды, с внутренним или внешним заказчиком.

  Фреймворк даёт инструменты для учёта заданий, но нарочно избегает учёта заказов. Если вам такой вид учёта нужен, то используйте
  фреймворк совместно с дополнительным специализированным таск-трекером или подобной системой. [Чем заказы отличаются от заданий](./assignment_vs_task.md).

benefit: # Польза от продукта
  - Заказчик и исполнитель:
    - Помогает договориться о том, что будет результатом работы
      - Ускоряет постановку задачи, делегируя детализацию исполнителю
      - Снижает риск заказчика потерять контроль над скоупом проекта
      - Упрощает внесение изменений в задание по ходу выполнения работ
      - Ускоряет приёмку, делегируя тестирование исполнителю
      - Ускоряет приёмку через использование старых проверенных чеклистов готовности/тестирования
    - Помогает контролировать прогресс в больших задачах
      - С помощью встроенной поддержки Roadmap и Milestones
      - С помощью встроенной поддержки user stories points (оценка объёма работ и прогресса)
      - С помощью встроенных чеклистов для нефункциональных требований
  - Любой сотрудник компании:
    - Ускоряет погружение в контекст продукта 
  - Исполнитель:
    - Помогает  самостоятельно проверить качество своей работы
    - Помогает исполнителю избежать фрустрации и ненужной работы
    - Через принуждение заказчика зафиксировать пользу
  - Администрация компании:
    - Инструмент для повышения эффективности компании
      - Через разработку чеклистов для типичных работ
      - Через заимствование чужих готовых хорошо проработанных заданий
      - Через разработку линейки хорошо совместимых друг с другом внутренних и внешних продуктов
      - Через встраивание механизмов обучения для сотрудников компании в их основной рабочий инструмент
  - Владелец продукта:
      - Подключить к работе новую команду разработки/поддержки
        - Заказать доработку
        - Передать в поддержку

referencies: # Примеры похожих продуктов
  - [Аналогия с Docker](./docker.md)

competitors: # Другие способы решить заявленные проблемы
  - ERP-системы
  - Task trackers:_ Asana, Jira, Trello, etc
  - Переписка в чатиках личных и групповых
  - Еженедельные планёрки
  - Уроки и шаги на Девмане

user_stories: # Пользовательские истории. Не все возможные, а только достойные их поддержки в исправном состоянии.
  - intro: |  # Введение
    "Solo worker" — это человек, который сам себе ставит задачу. Ему важна скорость работы. Базу данных он использует
    ради чеклистов и быстрого погружения в контекст своих старых проектов.

    "Заказчик" и "Исполнитель" — это ситуация, в которой задача ставится одним человеком, а за реализацию отвечает уже другой. Здесь
    важны истории, связанные с согласованием и контролем прогресса.

    Задание совмещает в себе функции трёх вещей: задание на работу, отчёт о проделанной работе и документацию на продукт.
    Roadmap — это серия заданий, где каждый следующий YAML дополняет предыдущий через EXTEND.
    Milestone — это очередной шаг в Roadmap.

  - Solo worker:
    - В ходе тестирования подорвался на сложной проблеме → Хочу отвлечься, но зафиксировать на чём остановился → В плане работ вижу галочки напротив того, что успел проверить
    - Пришла в голову новая идея → Хочу решить взять в работу или отказаться → Принял решение
      - Не могу сходу принять решение → Хочу узнать что потеряю, отказавшись от изменения → Молниеносно сверился c пользой, органичениями и историями
    - Решил нарастить продукт → Хочу внести правки, ничего не поломав → Вижу, что изменения в YAML-задании не противоречат старым записям
      # Получается, что на любой продукт должно быть задание и оно неизбежно поддерживается всё время эксплуатации ?
      - Боюсь, что забыл важные детали → Хочу быстро вспомнить о специфике продукта перед внесением изменений → Молниеносно перечитал YAML-задание
      - Боюсь поломать что-то важное → Хочу узнать какие важные истории могли быть задеты → Молниеносно сверился со списком уже реализованных историй.

  - Заказчик:
    - Появилась крупная задача без деталей реализации → Хочу, чтобы исполнитель сам всё додумал и согласовал со мной → Требую отчитаться в виде нового YAML-задания
      - Исполнитель прислал промежуточный отчёт → Хочу не продолбать исходные хотелки → Убедился, что отчёт расширяет моё исходное задания и в диффе ничего не потеряно
      - Исполнитель сообщил что закончил → Хочу готовый к использованию продукт, а не полуфабрикат → Убедился, что чеклисты не пусты и везде проставлены галочки
    - Заказ большой и рискованный → Хочу отслеживать прогресс → Вижу по каким Roadmap/Milestones буду отслеживать
      - … → Хочу знать сколько планируется этапов и какие ожидать сроки поставки → …
      - … → Хочу узнать когда ждать реализована  фича → Нашёл в какой этап вошла фича и когда её ждать
    - Начальство запросило отчёт по ходу работ → Хочу быстро скинуть инфу → Отправил ссылку с заданием и инфой по прогрессу
      - Нашёл в старой переписке ссылку на исходное задание → Хочу добраться до roadmap и отчётов → Как (?)
        # Возможно, исполнитель делая форк (EXTEND) должен нажать ещё куда-то, чтобы автор исходного документа видел его как "результат" или "отчёт" или "предложенные правки"
      - Не смог найти ссылку на задание или отчёт → Хочу найти документ → Как (?)
      - … → Хочу, чтобы начальство получило свежую инфу → Вижу дату последнего обновления от исполнителя
      - … → Хочу, чтобы начальство увидело сроки поставки → …
      - … → Хочу, чтобы начальство увидело какие фичи и в какой milestone вошли → …
      - Боюсь, что начальство увидит только 404 из-за ненастроенного доступа → Хочу выдать доступ → Копирую ссылку для read-only доступа
    - Всплыли новые факты → Хочу перегодовориться с исполнителем → …
      - … → Хочу поменять задание → …
    - Исполнитель просит забрать готовый продукт → Хочу организовать поддержку и развитие продукта → …
      - … → Хочу обновить документацию по продукту → Вливаю правки от исполнителя
      - Всплыли баги → Хочу заказать поддержку другому сотруднику → Сотрудник получил проектную документацию
      - Появилась новая возможность → Хочу заказать доработку продукта у другого сотрудника → Сотрудник получил проектную документацию
    - В дороге вспомнил про срочную/важную задачу → Хочу сформулировать задание устно → Исполнитель скинул мне ссылку на описание задачи
      # Как в таком случае передать права на задание начальнику? Видимо, указав учётку начальника "Передать права".
    - … → Хочу найти ссылку на старое задание → …
      - Вспомнил, что недавно смотрел отчёт → Хочу сократить выдачу до "свежие updates" → Вижу выдачу от свежего к старому с учётом зависимых заданий
      - Вспомнил, что задачу делал не сам → Хочу сократить выдачу до "делегировано" → …
      - Вспомнил, что упоминалось в названии → … → …
      - Вспомнил, что упоминалось в тексте → … → …
      - Нашёл ссылку у себя в заметках → Хочу проверить, что это не устаревшая копия → Узнал, что отчёт составлял исполнитель и обновлял неделю назад
    - Исполнитель написал, что не сможет закончить проект → Хочу передать работу другому исполнителю → …

  - Исполнитель:
    - Заказчик просит составить Roadmap → Хочу показать что и в какой момент делаем → 
    - Заказчик просит update по заказу → Хочу показать что уже реализовано, и когда будет остальное → В отчёте лежит актуальная инфа и проставлена дата обновления
      - … → Хочу показать что реализовано, а что ещё нет
      - Переживаю, что опаздываю на неделю → Хочу сдвинуть срок поставки продукта → …
      - Переживаю, что опаздываю на неделю → Хочу сдвинуть сроки всех milestones начиная с текущего → …
      - Всплыли новые блоки работ → Хочу сдвинуть срок отдельного milestone и всех следующих → …
    - Всплыли новые факты → Хочу, чтобы заказчик поменял задание → …
    - … → Хочу выдать read-only доступ к документации для членов команды → 
    - В ходе тестирования всплыла бага → Хочу сообщить о проблеме программисту → Скопирал 
    - Приступил к новой фиче → Хочу спланировать тестирование → Скопирал несколько user stories, включая вложенные к себе в личный список задач
      # При таком тестировании теряется роль. Но можно починить эту проблему через хитрую логику копирования на стороне фронтенда: подставляет роль.

  - Тех.лид:
    - …

limitations: # Ограничения, распространяющиеся на весь продукт целиком
  - У задания нет галочки "сделано/не сделано"
    - Потому что приёмку работ можно проводить сильно по-разному
    - Приёмки может вообще не быть, если продукт активно разрабатывается
  - Во фрейморке есть задания, но нет задач, проектов и заказов.
    - [Подробнее](./assignment_vs_task.md)
  - Задание на работу и задание на конечный продукт — это два разных задания
    - Результатом работы может быть как один продукт, так и сразу несколько. Причём на старте это сложно предсказать наверняка.
    - Задание на работу может сослаться на задание к уже существующему продукту
    - Задание на работу может быть без ссылок, если продукт не успели создать и даже проработать
  - У задания всегда один владелец, для остальных оно read-only
  - Нет фич, потому что для них сложно очертить границы и проверить готово/нет
    - Проблема в том, что ценности продукту добавляют реализованные пользовательские истории, а фичи сами по себе не способны их закрывать.
  - В репозитории каждое задание на продукт живёт в отдельном каталоге, чтобы было куда класть связанные картинки, иллюстрации и прочие файлы.
  - Вся инфа представлена в виде списков ради быстрого 
  - В репозитории все задания для продуктов живут в каталоге на одном уровне без вложенности
    - Упрощает навигацию и перелинковку

  # - Задание делится на три части:_ README, манифест assignment.yaml и доп.материалы по отдельным ссылкам. Почему?
  # - Состояние чеклистов живёт вместе с заданием. Почему?

risks: # Риски, которыми надо управлять: мониторить, подстраховываться и иметь готовый план действий
  - …

how_to_check: # Как проверить, что продукт готов
  - …

how_to_estimate: # Как оценить объем и сроки
  - …