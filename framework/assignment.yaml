use: product

intro: |
  Фреймворк с помощью которого вы сможете быстро составлять задания на разработку продуктов или оказание услуг.
  Подходит для самостоятельного использования или внутри команды, с внутренним или внешним заказчиком.

  Фреймворк даёт инструменты для учёта заданий, но нарочно избегает учёта заказов. Если вам такой вид учёта нужен, то используйте
  фреймворк совместно с дополнительным специализированным таск-трекером или подобной системой. [Чем заказы отличаются от заданий](./assignment_vs_task.md).

benefit: # Польза от продукта
  - Помогает заказчику и исполнителю договориться о том, что будет результатом работы
    - Ускоряет постановку задачи, делегируя детализацию исполнителю
    - Снижает риск заказчика потерять контроль над скоупом проекта
    - Упрощает внесение изменений в задание по ходу выполнения работ
    - Ускоряет приёмку, делегируя тестирование исполнителю
    - Ускоряет приёмку через использование старых проверенных чеклистов готовности/тестирования
  - Помогает заказчику и исполнителю контролировать прогресс в больших задачах
    - С помощью встроенной поддержки Roadmap и Milestones
    - С помощью встроенной поддержки user stories points (оценка объёма работ и прогресса)
    - С помощью встроенных чеклистов для нефункциональных требований
  - Ускоряет погружение в контекст продукта для всех сотрудников компании
  - Помогает исполнителю самостоятельно проверить качество своей работы
  - Помогает исполнителю избежать фрустрации и ненужной работы
    - Через принуждение заказчика зафиксировать пользу
  - Даёт администрации компании инструмент для повышения эффективности компании
    - Через разработку чеклистов для типичных работ
    - Через заимствование чужих готовых хорошо проработанных заданий
    - Через разработку линейки хорошо совместимых друг с другом внутренних и внешних продуктов
    - Через встраивание механизмов обучения для сотрудников компании в их основной рабочий инструмент
  - Помогает владельцу продукта подключить к работе новую команду разработки/поддержки
    - Заказать доработку
    - Передать в поддержку

referencies: # Примеры похожих продуктов
  - [Аналогия с Docker](./docker.md)

competitors: # Другие способы решить заявленные проблемы
  - ERP-системы
  - Task trackers:_ Asana, Jira, Trello, etc
  - Переписка в чатиках личных и групповых
  - Еженедельные планёрки
  - Уроки и шаги на Девмане

user_stories: # Пользовательские истории. Не все возможные, а только достойные их поддержки в исправном состоянии.
  - intro: |  # Введение
    "Solo worker" -- это человек, который сам себе ставит задачу. Ему важна скорость работы. Базу данных он использует
    ради чеклистов и быстрого погружения в контекст своих старых проектов.

    "Заказчик" и "Исполнитель" — это ситуация, в которой задача ставится одним человеком, а за реализацию отвечает уже другой. Здесь
    важны истории, связанные с согласованием и контролем прогресса.

    Задание совмещает в себе функции трёх вещей: задание на работу, отчёт о проделанной работе и документацию на продукт.
    Roadmap — это серия заданий, где каждый следующий YAML дополняет предыдущий через EXTEND.
    Milestone — это очередной шаг в Roadmap.
  - …

limitations:
  - …

risks:
risks: # Риски, которыми надо управлять: мониторить, подстраховываться и иметь готовый план действий
  - …

how_to_check: # Как проверить, что продукт готов
  - …

how_to_estimate: # Как оценить объем и сроки
  - …