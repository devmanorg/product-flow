Задача: !concept
  определение: |
    Задача -- это такой блок работы, который можно делегировать:

    - транслировать ценность результата
    - определить критерии готовности (definition of done)
    - создать персональную ответственность
    - обеспечить исполнителя ресурсами

    Одна задача может включать в себя несколько других подзадач, образуя иерархию делегирования.

    Синонимы: Проект.
  Мелкая задача на 5 минут: !example
  Огромный проекты на два года разработки: !example
  Поручил самому себе: !example |
    Задачу можно делегировать самому себе. Такое часто случается при работе над крупной задачей, когда нужно сосредоточиться на решении
    отдельно взятой уской проблемы.
  С ограниченным бюджетом на реализацию: !example
  Бюджет ещё не выделен: !example |
    Проект выполняется в инициативном порядке и находится пока на ранней стадии. До просчёта и согласования бюджета
    дело пока не дошло.
  Отказ от бюджетирования: !example
  Делегирована: !example
  Запланирована: !example
  Отменена: !example
  Без продукта на выходе: !exclusion |
    Не бывает задачи без полезного результата -- продукта. У продукта должно быть название и предполагаемые способы использования.
  Одна задача -- несколько продуктов на выходе: !example
  Задача без задания — когда не успели расписать: !example
  Задача без задания —  когда уже расписано в другом месте: !example
  С вложенными задачами: !example
  Бесконечная задача: !example |
    Задача по тех.поддержке сайта может продливаться из месяца в месяц. На каждый месяц есть свой ограниченный бюджет на проведение работ.
    В конце месяца исполнитель запоняет отчёт о проведённых работах.

    Полчается, что возможна рекурентная задача -- бесконечная, с автопролонгацией каждую неделю/месяц.
  Заказ: !example |
    Заказ можно рассматривать как ещё одну разновидность задачи.
  # TODO Чем заказ отличается от обычной задачи? Возможно, дело в наличии посредника -- сервиса с каталогом услуг и главы подразделения.


Сервис: !concept
  # TODO Есть каталог услуг -- типовые заказы.


Задание: !concept
  определение: |
    Задание — это Product Flow Assignment.
  # TODO YAML-задание -- Это только один из возможных чеклистов полезности, definition of done?

Шаг: !concept
  определение: |
    Что-то простое, быстрое и немозгоёмкое -- то, с чего легко будет начать работу над задачей.
    В терминах «Джедайских техник» шаг — это такая работа, которую может выполнить внутренняя обезъянка быстро, легко и не
    задумываясь.

    Синонимы: Step.
  Следующий шаг: !example
  Пройденный шаг: !example
  Отменённый шаг: !example
  Трудоёмкий шаг: !exclusion
  Длинный шаг: !exclusion
  Мозгоёмкий шаг: !exclusion
  Запланированный шаг: !example
  Незапланированный шаг: !example
  Чужой шаг: !example
    По задаче жду следующего шага от другого человека.


Этап: !concept
  определение: |
    Этап задачи -- это значимое достижение на пути реализации задачи, проекта.

    Задача делится на этапы, когда объём работ столь велик, что нужно сфокусироваться на более близкой и понятной цели.

    Названия этапам лучше давать как событиям, в прошедшем времени: "Достигнута конверсия 10%", "На сервере заработал сайт",
    "Закрыт технический риск" и т.п. -- чтобы не путать названия этапов с названиями задач и шагов.

    Синонимы: Milestone, Достижение, Веха.
  Два этапа в параллельной работе: !example |
    Второй этап может начаться прежде, чем будет завершён первый.
  С дедлайном: !example
  # FIXME Срок задачи -- это дедлайн последнего milestone "Завершить проект"? А если это задача, то как назвать этот этап?
  # "Работа завершена"?

  # TODO Ресурсы привязываются к этапу ?

  # TODO Переназвать сущность "Этап", чтобы трудно было в качестве названия этапа указывать не событие.

  # FIXME Запретить задачи без привязки к этапу проекта ? Или считать, что в проекте всегда есть этап "Проект завершён" и
  # по умолчанию задачи привязываются к этому этапу.


Риск: !concept


Идея: !concept
  определение: |
    Синонимы: Предложение, отложенная задача.


Инбокс: !concept
  определение: |


Регламентная работа: !concept
  Раз в неделю: !example
  Раз в месяц: !example
  Выполнена или нет: !example
  ТО для продукта, созданного командой: !example
  Работа связана с услугой подрядчика: !example
  Работа выполняется в фоне, походя -- главное не забыть: !example
  Работа требует пару часов времени: !example
  Большая регламентная работа в виде отдельной задачи: !example
  Назначен ответственный: !example
  Пока не назначен ответственный: !example
  # TODO (?) Регламентная работа выполнена без отдельной задачит в таск-трекере?
  # TODO (?) Для зависимости, поддержкой которой занимается другая команда, но продукт сырой и нужно организовать обратную связь (tg bot framework)
    #idea Переложить эту задачу трансляции хотелок целиком на команду поддержки? push vs pull ?
  # TODO Регламентные работы нужны не только результатам работы, но ещё бюджетируемым ресурсам ? Кажется, что можно обойтись.
  # TODO У регламентной работы есть свой estimate -- ожидаемый бюджет на проведение. Его важно учитывать на старте при бюджетировании проекта.
  # Возможно, его также надо учитывать уже в процессе реализации проекта, чтобы заметить жирные несостыковки и принять меры.
  # Правда, учёт может оказаться сложнее и более трудоёмким, чем сама регламентная работа.


Бюджетируемый ресурс: !concept
  определение: |
    Выделенный задаче ограниченный ресурс, за которым надо следить в процессе работы над задачей. 
    Ведём учёт зарезервированных ресурсов, чтобы не забыть их выделить и предоставить исполнителю. Иначе сотрудник получит
    ответственность, но не полномочия.
  Человеко-часы менеджера проекта: !example |
    В момент создания проекта назначаем ответственного PMа и сразу бронируем его время на 3-4 месяца вперёд.
  Человеко-часы стажёров: !example |
    Для реализации IT-проекта PMу получает от администрации стажировки Девмана трёх программистов-стажёров на пару месяцев.
  Человеко-часы узкопрофильных специалистов: !example
  Зарезервированные серверные мощности: !example |
    В серверном облаке Яндекс арендовали кластер Kubernetes на время работы над проектом.
  Выделенный бюджет: !example |
    Заказчик выделил менеджеру проекта бюджет до 100К рублей на привлечение фрилансеров.
  Неисчерпаемый ресурс: !exclusion |
    Ссылка на туториал и справочные материалы, что пригодятся в реализации IT-проекта -- это Неисчерпаемые ресурсы. Их нет смысла
    резервировать.
  Перерасход ресурса: !example |
    Зарезервировано может быть 10 человеко-часов, но потрачено по факту в два раза больше. Более того, в процессе к задаче мог
    подключиться узкопрофильный специалист и вложить в ту же задачу ещё и своё время.
  Заказ на тех.поддержку: !example
  Время консультаций по 3 часа в неделю: !example |
    Можно запросить консультацию, но время ограничено тремя часами в неделю.
  Тестовая учётка на сайте: !example

  # TODO дедлайн как 

Поддерживаемый продукт: !concept
# Чтобы не забыть о работе с продуктовыми рисками в продуктах и обрабатывать фича-реквесты
# Владелец продукта назначить мейнтейнера и следить за качеством поддержки
# Продукт находится на балансе, если он привязан к счёту

Показатель здоровья: !concept
# Регламентная работа выполнена в срок либо нет
# Процент завершённости проекта
# Сколько осталось ресурсов
# Выполнен milestone в срок или нет
# TODO Запланированный продукт -- ещё не создан, но под него уже зарезервированы ресурсы и создан чеклист регламентных работ


# TODO Результат работы
# Задача "Вылечить Петю до 20 ноября" --> Полезный результат "Здоровый Петя".
# Задача "Выступить на конференции HighLoad 2020" --> Полезный результат "Выступление на конференции HighLoad 2020". 
# Результат — это один или несколько продуктов, созданных по результатам выполнения задачи
# Одна задача — один результат
# Один результат — несколько несколько продуктов и несколько yaml-заданий
# Продукты - это особый способ декомпозиции результата
# Продукт - как единица учëта
# Свои название, граница, отслеживаемый статус и т.д.
# У продукта есть название, а у результата - нет, кроме названия задачи
# Результатом могут быть недоделанные продукты
# Иерархия продуктов в качестве результата
# Результат без артефакта и без продукта


# TODO Ресурс
# - Дедлайн как ресурc
#   - Дедлайн определяет сколько дней осталось на завершение работ по задаче. Время — это наш самый ценный ресурс, который невозможно восполнить, поэтому его учёт встроен в Product Flow Tasks и является единственным обязательным ресурсом.
#   - Статусы продуктов на поддержке
#     - активная поддержка
#     - заморожено
#     - списано
# - Некоторые ресурсы требуют постоянной поддержки
#   - Договорённость с программистом о начале работ
#   - Договорённость с дизайнером
#   - Договорённость с агентством
# - Вид ресурса: Доступ к ПО или веб-сервису
#   - Неисчерпаемый ресурс — им могут пользоваться сразу несколько человек не мешая друг другу
# - Вид ресурса: Статья/Туториал
#   - Неисчерпаемый ресурс — им могут пользоваться сразу несколько человек не мешая друг другу
# - Виды прав доступа
#   - Право пользования ресурс
#   - Право владения == Право собственности
#   - Право вносить изменения == Право мейнтейнера
#   - 
#   - TODO: свериться с терминологией из лицензий MIT и прочих


# TODO Контракт

# TODO Бюджетируемый ресурс -- исчерпаемый ресурс, требующий отдельного учёта. Это часть контракта -- ограничения на проект по
# некоторым из доступных ресурсов.


# TODO Альтернативные способы решить проблему ?
